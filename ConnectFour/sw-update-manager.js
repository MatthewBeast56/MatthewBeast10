!function(){class e{constructor(e,{reloadOnUpdate:t=!0}={}){if(this.events={updateAvailable:[],update:[]},this.serviceWorker=e,this.isUpdateAvailable=!1,this.reloadOnUpdate=t,!e)throw new Error("SW Update Manager: Service worker required")}checkForUpdates(){this.serviceWorker.then(e=>(this.registration=e,this.onRegisterServiceWorker(),e))}on(e,t){this.events[e].push(t)}onRegisterServiceWorker(){if(!navigator.serviceWorker.controller)return;let e;navigator.serviceWorker.addEventListener("controllerchange",()=>{e||(e=!0,this.events.update.forEach(e=>e()),this.reloadOnUpdate&&window.location.reload())}),this.onNewServiceWorker(()=>{this.isUpdateAvailable=!0,this.events.updateAvailable.forEach(e=>e())})}update(){this.isUpdateAvailable&&this.registration.waiting&&this.registration.waiting.postMessage({updateManagerEvent:"update"})}onNewServiceWorker(e){return this.registration.waiting?e():this.registration.installing?this.listenInstalledStateChange(e):void this.registration.addEventListener("updatefound",()=>{this.listenInstalledStateChange(e)})}listenInstalledStateChange(e){this.registration.installing.addEventListener("statechange",t=>{"installed"===t.target.state&&e()})}}"undefined"!=typeof module?module.exports=e:window.SWUpdateManager=e}();
