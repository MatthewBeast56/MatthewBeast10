!function(e,t,i,n,s,o,a){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e,t=t&&t.hasOwnProperty("default")?t.default:t,i=i&&i.hasOwnProperty("default")?i.default:i,n=n&&n.hasOwnProperty("default")?n.default:n,s=s&&s.hasOwnProperty("default")?s.default:s,o=o&&o.hasOwnProperty("default")?o.default:o,a=a&&a.hasOwnProperty("default")?a.default:a;class r{constructor({url:e,roomCode:t}){this.url=e,this.roomCode=t,this.localPlayerId=this.getLocalPlayerId(),this.callQueue=[]}connect(){this.socket=t.connect(this.url),this.status="connecting",this.executeCallQueue()}disconnect(){this.socket.disconnect()}get connected(){return!!this.socket&&this.socket.connected}get disconnected(){return!!this.socket&&this.socket.disconnected}executeCallQueue(){this.callQueue.forEach(({method:e,args:t})=>{this[e](...t)}),this.callQueue.length=0}getLocalPlayerId(){return this.localPlayerId||sessionStorage.getItem("c4-localPlayerId")}setLocalPlayerId(e){return this.localPlayerId=e,sessionStorage.setItem("c4-localPlayerId",e)}on(e,t){this.socket?this.socket.on(e,(e={})=>{this.processArgs(e,t)}):this.callQueue.push({method:"on",args:[e,t]})}emit(e,t={},i){this.socket?(t=Object.assign({roomCode:this.roomCode,playerId:this.localPlayerId},t),this.socket.emit(e,t,(e={})=>{this.processArgs(e,i)})):this.callQueue.push({method:"emit",args:[e,t,i]})}processArgs(e,t){e.status&&(this.status=e.status),e.roomCode&&(this.roomCode=e.roomCode),e.localPlayer&&(this.setLocalPlayerId(e.localPlayer.id),this.localPlayer=e.localPlayer),t&&t(e)}}var l=e=>Object.keys(e).filter(t=>e[t]).join(" ");class h{constructor({chips:e=[],emptySlotCount:t=0}={}){this.chips=[...e],this.emptySlotCount=t}get length(){return this.chips.length}set length(e){return this.chips.length=e,this.chips.length}addChip(e){this.chips.push(e)}addConnection(e){this.chips.push(...e.chips),this.emptySlotCount+=e.emptySlotCount||0}forEach(e){return this.chips.forEach(e)}}function c({player:e,column:t=null,row:i=null,winning:n=!1}){this.player=e,this.column=t,this.row=i,this.winning=n}h.directions=[{x:0,y:-1},{x:-1,y:-1},{x:-1,y:0},{x:-1,y:1}];class m{constructor({columnCount:e,rowCount:t,columns:i,lastPlacedChip:s=null}){this.columnCount=e,this.rowCount=t,this.columns=i?i.map(e=>e.slice(0)):n.times(this.columnCount,()=>[]),this.lastPlacedChip=s}checkIfFull(){return this.columns.every(e=>e.length===this.rowCount)}getChipCount(){return this.columns.reduce((e,t)=>e+t.length,0)}resetGrid(){this.columns.forEach(e=>{e.length=0}),this.lastPlacedChip=null}getNextAvailableSlot({column:e}){const t=this.columns[e].length;return t<this.rowCount?t:null}placeChip({chip:e,column:t}){this.columns[t].push(e),this.lastPlacedChip=e,e.column=t,e.row=this.columns[t].length-1}getSubConnection(e,t){let i=e;const n=new h;for(;;){const s=i.column+t.x;if(void 0===this.columns[s])break;const o=i.row+t.y,a=this.columns[s][o];if(void 0===a){o>=0&&o<this.rowCount&&(n.emptySlotCount+=1);break}if(a.player!==e.player)break;i=a,n.addChip(a)}return n}addSubConnection(e,t,i){const n=this.getSubConnection(t,i);e.addConnection(n)}getConnections({baseChip:e,minConnectionSize:t}){const i=[];return h.directions.forEach(n=>{const s=new h({chips:[e]});this.addSubConnection(s,e,n),this.addSubConnection(s,e,{x:-n.x,y:-n.y}),s.length>=t&&i.push(s)}),i}getChipScore({chip:e,currentPlayerIsMaxPlayer:t}){let i=0;const n=this.getConnections({baseChip:e,minConnectionSize:1});for(let e=0;e<n.length;e+=1){const t=n[e];if(t.length>=4){i=m.maxScore;break}t.emptySlotCount>=1&&(i+=Math.pow(t.length,2)+Math.pow(t.emptySlotCount,3))}return t||(i*=-1),i}getScore({currentPlayer:e,currentPlayerIsMaxPlayer:t}){let i,n,s=0;for(i=0;i<this.columns.length;i+=1)for(n=0;n<this.columns[i].length;n+=1){const o=this.columns[i][n];if(o.player!==e)continue;const a=this.getChipScore({currentPlayer:e,currentPlayerIsMaxPlayer:t,chip:o});if(Math.abs(a)===m.maxScore)return a;s+=a}return s}restoreFromServer({grid:e,players:t}){const i=n.indexBy(t,"color");this.columnCount=e.columnCount,this.rowCount=e.rowCount,this.columns=e.columns.map(e=>e.map(e=>new c(Object.assign(e,{player:i[e.player]})))),e.lastPlacedChip?this.lastPlacedChip=this.columns[e.lastPlacedChip.column][e.lastPlacedChip.row]:this.lastPlacedChip=null}}m.maxScore=1/0,m.minScore=-m.maxScore;class d{constructor({name:e,color:t,score:i=0,connected:n=!1,lastDisconnectReason:s=null,lastReaction:o=null}){this.name=e,this.color=t,this.score=i,this.connected=n,this.lastDisconnectReason=s,this.lastReaction=o}}class u extends d{}u.prototype.type="human";class g extends d{wait(e){setTimeout(e,this.constructor.waitDelay)}getNextMove(){throw new Error("This method must be implemented by a subclass of AsyncPlayer")}}g.prototype.type="async";class p extends g{getNextMove({game:e}){return new Promise(t=>{e.once("online-player:receive-next-move",({column:e})=>{t({column:e})})})}}p.prototype.type="online",p.waitDelay=0;class y extends g{getNextMove({game:e}){return new Promise(t=>{t(this.maximizeMove({grid:e.grid,minPlayer:e.getOtherPlayer(this),depth:0,alpha:m.minScore,beta:m.maxScore}))})}maximizeMove({grid:e,minPlayer:t,depth:i,alpha:n,beta:s}){const o=e.getScore({currentPlayer:this,currentPlayerIsMaxPlayer:!0});if(i===y.maxComputeDepth||Math.abs(o)===m.maxScore)return{column:null,score:o};const a={column:null,score:m.minScore};for(let o=0;o<e.columnCount;o+=1){if(e.columns[o].length===e.rowCount)continue;const r=new m(e);r.placeChip({column:o,chip:new c({player:this})});const l=this.minimizeMove({grid:r,minPlayer:t,depth:i+1,alpha:n,beta:s});if(l.score>a.score?(a.column=o,a.score=l.score,n=l.score):a.score===m.minScore&&(a.column=l.column,a.score=l.score,n=l.score),n>=s)break}return a}minimizeMove({grid:e,minPlayer:t,depth:i,alpha:n,beta:s}){const o=e.getScore({currentPlayer:t,currentPlayerIsMaxPlayer:!1});if(i===y.maxComputeDepth||Math.abs(o)===m.maxScore)return{column:null,score:o};const a={column:null,score:m.maxScore};for(let o=0;o<e.columnCount;o+=1){if(e.columns[o].length===e.rowCount)continue;const r=new m(e);r.placeChip({column:o,chip:new c({player:t})});const l=this.maximizeMove({grid:r,minPlayer:t,depth:i+1,alpha:n,beta:s});if(l.score<a.score&&(a.column=o,a.score=l.score,s=l.score),n>=s)break}return a}}y.prototype.type="ai",y.waitDelay=200,y.maxComputeDepth=3;class P extends i{constructor({grid:e=new m({columnCount:7,rowCount:6}),players:t=[],debug:i=!1}={}){super(),this.grid=e,this.players=t,this.type=null,this.lastType=null,this.currentPlayer=null,this.inProgress=!1,this.pendingChip=null,this.winner=null,this.requestingPlayer=null,i?(this.debug=!0,this.columnHistory=[]):this.debug=!1}startGame({startingPlayer:e}={}){this.currentPlayer=e||this.players[0],this.inProgress=!0,this.emit("game:start"),this.startTurn()}endGame(){this.winner&&(this.winner.score+=1),this.inProgress=!1,this.currentPlayer=null,this.pendingChip=null,this.emit("game:end"),this.type=null,this.debug&&(this.columnHistory.length=0)}resetGame(){this.winner=null,this.grid.resetGrid()}setPlayers({gameType:e,players:t=[],localPlayer:i=null}){if(0===this.players.length)"1P"===e?(this.players.push(new u({name:"Human",color:"red"})),this.players.push(new y({name:"Mr. A.I.",color:"black"}))):"2P"===e?(this.players.push(new u({name:"Human 1",color:"red"})),this.players.push(new u({name:"Human 2",color:"blue"}))):"online"===e&&t.length>0&&i&&this.players.push(...t.map(e=>e.color===i.color?new u(e):new p(e)));else if(e!==this.lastType)return this.players.length=0,void this.setPlayers({gameType:e});this.type=e,this.lastType=e}getOtherPlayer(e=this.currentPlayer){return this.players.find(t=>t.color!==e.color)}startTurn(){this.pendingChip=new c({player:this.currentPlayer}),this.currentPlayer.getNextMove&&this.currentPlayer.getNextMove({game:this}).then(e=>{this.emit("async-player:get-next-move",{player:this.currentPlayer,nextMove:e})})}endTurn(){this.inProgress&&(this.currentPlayer=this.getOtherPlayer(this.currentPlayer),this.startTurn())}placePendingChip({column:e}){this.grid.placeChip({chip:this.pendingChip,column:e}),this.emit("player:place-chip",this.grid.lastPlacedChip),this.debug&&(this.columnHistory.push(e),console.log(this.columnHistory.join(", "))),this.pendingChip=null,this.checkForWin(),this.checkForTie(),this.endTurn()}checkForTie(){this.grid.checkIfFull()&&(this.emit("game:declare-tie"),this.endGame())}checkForWin(){if(!this.grid.lastPlacedChip)return;const e=this.grid.getConnections({baseChip:this.grid.lastPlacedChip,minConnectionSize:P.winningConnectionSize});e.length>0&&(e[0].length=P.winningConnectionSize,e[0].forEach(e=>{e.winning=!0}),this.winner=this.grid.lastPlacedChip.player,this.emit("game:declare-winner",this.winner),this.endGame())}restoreFromServer({game:e,localPlayer:t={}}){this.inProgress=e.inProgress,this.players.length=0,this.setPlayers({gameType:"online",players:e.players,localPlayer:t}),this.off("online-player:receive-next-move"),this.currentPlayer=this.players.find(t=>t.color===e.currentPlayer),this.requestingPlayer=this.players.find(t=>t.color===e.requestingPlayer),this.grid.restoreFromServer({grid:e.grid,players:this.players}),e.pendingChipColumn&&this.emit("grid:align-pending-chip-initially",{column:e.pendingChipColumn}),this.winner=null,this.inProgress&&this.currentPlayer&&this.startTurn(),this.checkForWin(),this.checkForTie()}}P.winningConnectionSize=4;class C{static getNormalizedTransformProperty(){const e=["transform","WebkitTransform"].find(e=>void 0!==document.documentElement.style[e]);return e||"transform"}static getNormalizedTransitionEndEventName(){const e=n.find(["transitionend","webkitTransitionEnd"],e=>void 0!==window[`on${e.toLowerCase()}`]);return e?e.name:"transitionend"}static getNormalizedEventName(e){return void 0!==C.normalizedEventNames[e]?C.normalizedEventNames[e]:e}static getNormalizedStyles(e){const t={};return Object.keys(e).forEach(i=>{void 0!==C.normalizedProperties[i]?t[C.normalizedProperties[i]]=e[i]:t[i]=e[i]}),t}}C.normalizedProperties={transform:C.getNormalizedTransformProperty()},C.normalizedEventNames={transitionend:C.getNormalizedTransitionEndEventName()};class w extends i{oninit({attrs:{game:e,session:t}}){this.game=e,this.session=t,this.grid=this.game.grid,this.game.on("async-player:get-next-move",({player:e,nextMove:t})=>{e.wait(()=>{this.placePendingChip({column:t.column})})}),this.session.on("align-pending-chip",({column:e})=>{this.transitionPendingChipY||(this.alignPendingChipWithColumn({column:e}),o.redraw())}),this.game.on("grid:align-pending-chip-initially",({column:e})=>{this.pendingChipColumn=e,o.redraw()}),this.session.on("receive-next-move",({column:e})=>{this.game.emit("online-player:receive-next-move",{column:e})}),this.game.on("player:place-chip",({player:e,column:t})=>{"online"!==e.type&&this.session.emit("place-chip",{column:t})}),this.game.on("game:end",()=>this.reset()),this.reset()}reset(){this.resetCachedChipWidth(),this.pendingChipColumn=0,this.pendingChipRow=this.grid.rowCount,this.transitionPendingChipX=!1,this.transitionPendingChipY=!1}resetCachedChipWidth(){this.chipWidth=null}getTranslate({column:e,row:t}){return"translate("+100*e+"%,"+100*(this.grid.rowCount-t)+"%)"}getChipWidth(){if(!this.chipWidth){const e=document.getElementById("grid");this.chipWidth=e.offsetWidth/this.grid.columnCount}return this.chipWidth}getLastVisitedColumn(e){const t=this.getChipWidth();let i=Math.floor((e.pageX-e.currentTarget.offsetLeft)/t);return i=Math.max(0,i),i=Math.min(i,this.grid.columnCount-1)}waitForPendingChipTransitionEnd(e){this.off("pending-chip:transition-end"),this.once("pending-chip:transition-end",e)}emitAlignEvent({column:e}){this.session.emit("align-pending-chip",{column:e})}alignPendingChipWithColumn({column:e,transitionEnd:t,emit:i=!1}){e!==this.pendingChipColumn&&(i&&this.emitAlignEvent({column:e}),this.pendingChipColumn=e,this.pendingChipRow=this.grid.rowCount,this.transitionPendingChipX=!0,this.transitionPendingChipY=!1,this.waitForPendingChipTransitionEnd(()=>{this.transitionPendingChipX=!1,this.resetCachedChipWidth(),t&&t()}))}alignPendingChipViaPointer(e){this.game.pendingChip&&"human"===this.game.currentPlayer.type&&!this.transitionPendingChipY?this.alignPendingChipWithColumn({column:this.getLastVisitedColumn(e),emit:!0}):e.redraw=!1}placePendingChip({column:e}){const t=this.grid.getNextAvailableSlot({column:e});null!==t&&(this.pendingChipColumn!==e?this.alignPendingChipWithColumn({column:e,emit:!this.game.currentPlayer.wait,transitionEnd:()=>{this.game.currentPlayer.wait&&this.game.currentPlayer.wait(()=>{this.placePendingChip({column:e})})}}):this.transitionPendingChipX?this.waitForPendingChipTransitionEnd(()=>{this.transitionPendingChipX=!1,this.placePendingChip({column:e})}):(this.transitionPendingChipX=!1,this.transitionPendingChipY=!0,this.pendingChipColumn=e,this.pendingChipRow=t,this.finishPlacingPendingChip({column:e})),o.redraw())}placePendingChipViaPointer(e){!this.game.pendingChip||"human"!==this.game.currentPlayer.type||this.transitionPendingChipX||this.transitionPendingChipY?e.redraw=!1:this.placePendingChip({column:this.getLastVisitedColumn(e)})}finishPlacingPendingChip({column:e}){this.waitForPendingChipTransitionEnd(()=>{this.transitionPendingChipX&&!this.transitionPendingChipY?(this.transitionPendingChipX=!1,this.transitionPendingChipY=!1):(this.game.placePendingChip({column:e}),this.transitionPendingChipX=!1,this.transitionPendingChipY=!1,this.pendingChipRow=this.grid.rowCount,this.resetCachedChipWidth(),o.redraw())})}initializePendingChip({dom:e}){this.off("pending-chip:transition-end");const t=C.getNormalizedEventName("transitionend");e.addEventListener(t,t=>{t.target===e&&this.emit("pending-chip:transition-end")})}view(){return o("div#grid",{onmousemove:e=>this.alignPendingChipViaPointer(e),onclick:e=>this.placePendingChipViaPointer(e)},[this.game.pendingChip?o(`div.chip.pending.${this.game.pendingChip.player.color}`,{class:l({"transition-x":this.transitionPendingChipX,"transition-y":this.transitionPendingChipY}),style:C.getNormalizedStyles({transform:this.getTranslate({column:this.pendingChipColumn,row:this.pendingChipRow})}),oncreate:({dom:e})=>this.initializePendingChip({dom:e})},[o("div.chip-inner.chip-inner-real"),o("div.chip-inner.chip-inner-clone")]):null,o("div#grid-columns",n.times(this.grid.columnCount,e=>o("div.grid-column",n.times(this.grid.rowCount,t=>{if(this.grid.columns[e][t]){const i=this.grid.columns[e][t];return o(`div.chip.${i.player.color}`,{class:l({winning:i.winning})},o("div.chip-inner"))}return o("div.empty-chip-slot",o("div.empty-chip-slot-inner"))}))))])}}w.pendingChipAlignmentDelay=250,w.prototype.emitAlignEvent=n.throttle(w.prototype.emitAlignEvent,w.pendingChipAlignmentDelay);class v{oninit({attrs:{game:e,session:t}}){this.game=e,this.session=t}setPlayers(e){this.game.players.length>0&&this.game.resetGame(),this.game.setPlayers(e)}startGame(e){this.game.startGame({startingPlayer:e})}endGame(e){e?this.session.emit("end-game"):this.game.endGame()}returnToHome(){this.session.disconnect(),window.location.href="/"}closeRoom(){this.session.status="closingRoom",this.session.emit("close-room",{},()=>{this.returnToHome()})}declineNewGame(){this.session.status="decliningNewGame",this.session.emit("decline-new-game",{},()=>{this.returnToHome()})}leaveRoom(){this.session.status="leavingRoom",this.returnToHome()}promptToStartOnlineGame(){this.session.status="newPlayer",this.setPlayers({gameType:"online"})}setNewPlayerName(e){this.newPlayerName=e.target.value.trim(),e.redraw=!1}submitNewPlayer(e,t){e.preventDefault(),t?this.addNewPlayerToGame(t):this.startOnlineGame()}addNewPlayerToGame(e){this.session.status="connecting";const t={name:this.newPlayerName,color:"blue"};this.session.emit("add-player",{roomCode:e,player:t},({game:e,localPlayer:t})=>{this.game.restoreFromServer({game:e,localPlayer:t}),o.redraw()})}startOnlineGame(){this.session.connect();const e={name:this.newPlayerName,color:"red"};this.session.emit("open-room",{player:e},({roomCode:e,game:t,localPlayer:i})=>{this.game.restoreFromServer({game:t,localPlayer:i}),o.route.set(`/room/${e}`)})}requestNewOnlineGame(){this.session.status="connecting",this.session.emit("request-new-game",{winner:this.game.winner},({localPlayer:e})=>{"requestingNewGame"===this.session.status&&(this.game.requestingPlayer=e),o.redraw()})}configureCopyControl({dom:e}){this.shareLinkCopier=new s(e)}view({attrs:{roomCode:e}}){return o("div#dashboard-controls",["newPlayer"===this.session.status?o("form[action]",{onsubmit:t=>this.submitNewPlayer(t,e)},[o("input[type=text][autocomplete=off]#new-player-name",{name:"new-player-name",autofocus:!0,required:!0,oninput:e=>this.setNewPlayerName(e)}),o("button[type=submit]",e?"Join Game":"Start Game")]):"waitingForPlayers"===this.session.status?[o("div#share-controls",[o("input[type=text][readonly]#share-link",{value:window.location.href,onclick:({target:e})=>e.select()}),o("button#copy-share-link",{"data-clipboard-text":window.location.href,oncreate:({dom:e})=>this.configureCopyControl({dom:e})},"Copy")]),o("button.warn",{onclick:()=>this.closeRoom()},"Close Room")]:this.game.inProgress&&"watchingGame"!==this.session.status&&!this.session.disconnected?o("button.warn",{onclick:()=>this.endGame(e)},"End Game"):this.game.inProgress||"watchingGame"===this.session.status||this.session.disconnected||!this.session.disconnectedPlayer?!this.session.socket||2!==this.game.players.length||"connecting"===this.session.status||"watchingGame"===this.session.status||this.session.disconnectedPlayer||this.session.reconnectedPlayer||this.session.disconnected?this.session.socket?null:[null!==this.game.type?this.game.players.map(e=>o("button",{onclick:()=>this.startGame(e)},e.name)):[o("button",{onclick:()=>this.setPlayers({gameType:"1P"})},"1 Player"),o("button",{onclick:()=>this.setPlayers({gameType:"2P"})},"2 Players"),o("button",{onclick:()=>this.promptToStartOnlineGame()},"Invite")]]:[o("button",{onclick:()=>this.requestNewOnlineGame(),disabled:"requestingNewGame"===this.session.status},"newGameRequested"===this.session.status?"Yes!":"requestingNewGame"===this.session.status?"Pending":"Play Again"),"requestingNewGame"!==this.session.status?o("button.warn",{onclick:()=>this.declineNewGame(),disabled:"requestingNewGame"===this.session.status},"newGameRequested"===this.session.status?"Nah":"requestingNewGame"!==this.session.status?"No Thanks":null):null]:o("button.warn",{onclick:()=>this.leaveRoom()},"Leave Room")])}}class f{view({attrs:{game:e,session:t,roomCode:i}}){return o("div#game-dashboard",{class:l({"prompting-for-input":"newPlayer"===t.status})},[o("p#game-message","connecting"===t.status?"Connecting to server...":"roomNotFound"===t.status?["This room does not exist",o("br"),"or has been closed by the host."]:"closingRoom"===t.status||"closedRoom"===t.status?"Closing room...":"leavingRoom"===t.status||"decliningNewGame"===t.status||"declinedNewGame"===t.status?"Leaving room...":t.disconnected?"Lost connection. Trying to reconnect...":t.disconnectedPlayer&&"newGameDeclined"===t.disconnectedPlayer.lastDisconnectReason?`${t.disconnectedPlayer.name} has declined to play again.`:t.disconnectedPlayer?`${t.disconnectedPlayer.name} has disconnected.`:t.reconnectedPlayer?`${t.reconnectedPlayer.name} has reconnected.`:"newPlayer"===t.status?o("label[for=new-player-name]","Enter your player name:"):"requestingNewGame"===t.status?`Asking ${e.getOtherPlayer(e.requestingPlayer).name} to play again...`:"newGameRequested"===t.status?`${e.requestingPlayer.name} asks to play again.`:0===e.players.length?"Welcome! How many players?":e.currentPlayer?`${e.currentPlayer.name}, your turn!`:e.winner?`${e.winner.name} wins! Play again?`:e.grid.checkIfFull()?"We'll call it a draw! Play again?":t.socket||null===e.type?i&&e.requestingPlayer?`${e.requestingPlayer.name} has ended the game.`:"waitingForPlayers"===t.status?"Waiting for other player...":"Game ended. Play again?":"Which player should start first?"),o(v,{game:e,session:t,roomCode:i})])}}class b{oninit({attrs:{session:e,player:t}}){this.player=t,e.on("send-reaction",({reactingPlayer:e,reaction:t})=>{e.color===this.player.color&&(clearTimeout(this.player.lastReaction?this.player.lastReaction.timer:null),this.player.lastReaction=t,this.player.lastReaction.timer=setTimeout(()=>{this.player.lastReaction&&(this.player.lastReaction.timer=null),o.redraw()},b.reactionDuration),o.redraw())})}onupdate({attrs:{player:e}}){this.player=e}view({attrs:{player:e}}){return o("div.player-reaction",o("div.player-reaction-symbol",{class:l({show:e.lastReaction&&e.lastReaction.timer})},e.lastReaction?e.lastReaction.symbol:null))}}b.reactionDuration=1500;class k{view({attrs:{game:e,session:t}}){return o("div#player-area",[o("div#player-area-players",e.players.map(i=>o(`div.player.${i.color}`,{class:l({"current-player":i===e.currentPlayer,"is-reacting":i.lastReaction&&i.lastReaction.timer})},[o("div.player-name",i.name),o("div.player-score",i.score),o(b,{game:e,session:t,player:i})])))])}}class x{oninit({attrs:{game:e,session:t}}){this.game=e,this.session=t}sendReaction(e){this.session.emit("send-reaction",{reaction:e})}view(){return o("div#reaction-picker",x.availableReactions.map(e=>o("div.available-reaction",o("div.available-reaction-symbol",{onclick:()=>this.sendReaction(e)},e.symbol))))}}x.availableReactions=[{symbol:"👏"},{symbol:"😁"},{symbol:"😮"},{symbol:"😭"},{symbol:"😉"},{symbol:"😬"},{symbol:"🙈"}];class S{oninit({attrs:{session:e,roomCode:t}}){this.session=e,this.game=new P({debug:"connectfour.calebevans.me"!==window.location.host&&!window.__karma__}),t&&(this.session.connect(),this.joinRoom({roomCode:t})),this.listenForOnlineGameEvents({roomCode:t}),this.handlePlayerConnections({roomCode:t})}joinRoom({roomCode:e}){this.session.emit("join-room",{roomCode:e},({game:e,localPlayer:t})=>{if(e&&(this.game.restoreFromServer({game:e,localPlayer:t}),t)){const e=this.game.getOtherPlayer(t);e&&!1===e.connected&&(this.session.disconnectedPlayer=e)}o.redraw()})}listenForOnlineGameEvents(){this.session.on("add-player",({game:e,localPlayer:t})=>{this.game.restoreFromServer({game:e,localPlayer:t}),o.redraw()}),this.session.on("end-game",({requestingPlayer:e})=>{this.game.requestingPlayer=e,this.game.endGame(),o.redraw()}),this.session.on("request-new-game",({requestingPlayer:e})=>{this.game.requestingPlayer=e,o.redraw()}),this.session.on("start-new-game",({game:e,localPlayer:t})=>{this.game.restoreFromServer({game:e,localPlayer:t}),o.redraw()})}handlePlayerConnections({roomCode:e}){this.session.on("player-disconnected",({disconnectedPlayer:e})=>{this.session.disconnectedPlayer=e,clearTimeout(this.session.reconnectMessageTimer),delete this.session.reconnectedPlayer,o.redraw()}),this.session.on("player-reconnected",()=>{this.session.disconnectedPlayer&&(this.session.disconnectedPlayer.lastDisconnectReason=null,this.session.reconnectedPlayer=this.session.disconnectedPlayer,delete this.session.disconnectedPlayer),clearTimeout(this.session.reconnectMessageTimer),this.session.reconnectMessageTimer=setTimeout(()=>{delete this.session.reconnectedPlayer,o.redraw()},S.reconnectMessageDuration),o.redraw()}),this.session.on("disconnect",()=>{o.redraw()}),this.session.on("reconnect",()=>{this.joinRoom({roomCode:e})})}view({attrs:{roomCode:e}}){return o("div#game",{class:l({"in-progress":this.game.inProgress})},[o("div.game-column",[o("h1","Connect Four"),o(f,{game:this.game,session:this.session,roomCode:e})]),o("div.game-column",[o(w,{game:this.game,session:this.session}),o(k,{game:this.game,session:this.session}),this.session.connected&&2===this.game.players.length?o(x,{game:this.game,session:this.session}):null])])}}S.reconnectMessageDuration=1e3;class T{view({attrs:{updateManager:e}}){return o("div.update-notification",{class:l({"update-available":e.isUpdateAvailable}),onclick:()=>e.update()},[o("span.update-notification-message","Update available! Click here to update.")])}}class N{oninit({attrs:e={roomCode:null}}){if(this.session=new r({url:window.location.origin,roomCode:e.roomCode}),navigator.serviceWorker&&!window.__karma__&&"8080"!==window.location.port){const e=navigator.serviceWorker.register("/service-worker.js");this.updateManager=new a(e),this.updateManager.on("updateAvailable",()=>o.redraw()),this.updateManager.checkForUpdates()}}view({attrs:e={roomCode:null}}){return o("div#app",[this.updateManager?o(T,{updateManager:this.updateManager}):null,o(S,{session:this.session,roomCode:e.roomCode})])}}o.route.prefix="",o.route(document.querySelector("main"),"/",{"/":N,"/room/:roomCode":N}),e.attach(document.body)}(FastClick,io,TinyEmitter,_,ClipboardJS,m,SWUpdateManager);
//# sourceMappingURL=index.js.map
